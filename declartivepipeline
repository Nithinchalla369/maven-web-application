pipeline {
    agent any
    options {
         buildDiscarder logRotator(artifactDaysToKeepStr: '', artifactNumToKeepStr: '5', daysToKeepStr: '', numToKeepStr: '5')
        timestamps()
        
    }
    tools{
        maven 'maven3.9.6'
    }

stages{
    stage ('checkoutcode'){
        steps{
            git branch: 'development', credentialsId: 'bcee6a03-53d5-4d49-85cf-bedcc3135ca7', url: 'https://github.com/Nithinchalla369/maven-web-application.git'
        }
    }
    stage('build'){
        steps{
            sh "mvn clean package"
            
        }
    }
    stage('executesonarcubereport'){
        steps{
            sh "mvn clean sonar:sonar"
            
        }
    }
    stage('deployappintotomcatserver'){
        steps{
            sshagent(['2ffb24f3-7c75-4426-bc79-2c00e55335ec']){
 sh "scp -o StrictHostKeyChecking=no /var/lib/jenkins/workspace/pipeline-scriptedway/target/maven-web-application.war azureuser@10.0.0.5:/opt/apache-tomcat-9.0.84/webapps"
}
        }
    }
    
}//stagesclose
post {
  notBuilt {
    // One or more steps need to be included within each condition's block.
    slacknotification(currentBuild.result)
  }
  aborted {
    // One or more steps need to be included within each condition's block.
    slacknotification(currentBuild.result)
  }
  success {
    // One or more steps need to be included within each condition's block.
    slacknotification(currentBuild.result)
  }
  failure {
    // One or more steps need to be included within each condition's block.
    slacknotification(currentBuild.result)
  }
}

}//pipelineclose

//slack notification check start
def slacknotification(String buildStatus = 'STARTED') {
  // build status of null means successful
  buildStatus =  buildStatus ?: 'SUCCESSFUL'

  // Default values
  def colorName = 'RED'
  def colorCode = '#FF0000'
  def subject = "${buildStatus}: Job '${env.JOB_NAME} [${env.BUILD_NUMBER}]'"
  def summary = "${subject} (${env.BUILD_URL})"

  // Override default values based on build status
  if (buildStatus == 'STARTED') {
    colorName = 'YELLOW'
    colorCode = '#FFFF00'
  } else if (buildStatus == 'SUCCESSFUL') {
    colorName = 'GREEN'
    colorCode = '#00FF00'
  } else {
    colorName = 'RED'
    colorCode = '#FF0000'
  }

  // Send notifications
  slackSend (color: colorCode, message: summary)
}//slack notification ends
